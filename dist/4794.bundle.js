"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[4794],{84794:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var l=t(67294),a=t(81391),s=t(87398),r=t(68947),c=t(9167);const i=function(){return l.createElement(l.Fragment,null,l.createElement(s.Z,{as:"h2"},"Class Hoisting"),l.createElement(r.Z,null,"Classes defined using a ",l.createElement(c.BI,null,"class declaration")," are ",l.createElement(c.I,null,"hoisted"),", which means that JavaScript has a reference to the class. However, class is not ",l.createElement(c.I,null,"initialized")," by default, so any code that uses class before its initialization will throw a ",l.createElement(c.B,null,"ReferenceError"),". On the other hand, ",l.createElement(c.BI,null,"class expressions are not hoisted"),"."),l.createElement(r.Z,null,l.createElement(c.IU,null,"Example:"),l.createElement(a.Z,null,'const user = new User("John");  // ReferenceError\n\nclass User{\n  constructor(name) { this.name = name; }\n  showDetail() { \n    console.log(`Username: ${this.name}`); \n  }\n}\n')))}}}]);