"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[8767],{58767:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var a=t(67294),l=t(81391),o=t(87398),r=t(68947),s=t(9167);const i=function(){return a.createElement(a.Fragment,null,a.createElement(o.Z,{as:"h2"},"Anonymous Functions"),a.createElement(r.Z,null,"Anonymous functions are one, which do not have any name. These are also known as ",a.createElement(s.B,null,'"lambda functions"'),". These are usually transient functions that are either passed into or returned from another function. It allows us to write a function inline with its usage, instead of declaring it somewhere else in the code."),a.createElement(r.Z,null,"Rest parameters allows a function to accept an indefinite number of arguments. This was introduced in ",a.createElement(s.B,null,"ES6"),"."),a.createElement(r.Z,null,a.createElement(s.I,null,"Writing the same add() function with the use of rest parameters.")),a.createElement(l.Z,null,'const sayHello = function() {\n  console.log("hello");\n}\nsayHello(); // "hello"'),a.createElement(l.Z,null,'let arr = ["cat", "dog", "rabbit"]\narr.map((itm)=>{ console.log(itm); })\n\n//Output:\n"cat"\n"dog"\n"rabbit"'))}}}]);