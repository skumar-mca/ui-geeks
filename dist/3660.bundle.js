"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[3660],{83660:(e,n,l)=>{l.r(n),l.d(n,{default:()=>i});var t=l(67294),r=l(9231),a=l(81391),c=l(59044),o=l(87398),u=l(68947),m=l(12050),s=l(9167),E=function(){return(0,r.Z)("UI-Geeks: JavaScript | Exception Handling"),t.createElement(c.Z,null,t.createElement(o.Z,null,"Exception Handling"),t.createElement(u.Z,null,"Code ",t.createElement(s.I,null,"exceptions")," can be thrown using the ",t.createElement(s.BI,null,"throw")," statement and can be handled using ",t.createElement(s.BI,null,"try…catch…finally")," statements."),t.createElement(u.Z,null,t.createElement(o.Z,{as:"h2"},"throw"),t.createElement(u.Z,null,"A ",t.createElement(s.BI,null,"throw statement")," specifies the value to be thrown. Any value can be thrown like numbers, strings, objects or any other valid",t.createElement(m.Z,null)," ",t.createElement(s.I,null,"literal"),"."),t.createElement(u.Z,null,t.createElement(s.IU,null,"Syntax:"),t.createElement(s.cJ,null),t.createElement(u.Z,null,t.createElement(s.B,null,"throw")," ","<value-to-throw>")),t.createElement(u.Z,null,t.createElement(s.IU,null,"Example:"),t.createElement(s.cJ,null),t.createElement(u.Z,null,t.createElement(s.B,null,"throw"),' "Error occurred in processing!"'))),t.createElement(u.Z,null,t.createElement(o.Z,{as:"h2"},"try block"),t.createElement(u.Z,null,"The ",t.createElement(s.BI,null,"try")," block contains one or more statements which may"," ",t.createElement(s.I,null,"throw any error"),"."),t.createElement(u.Z,null,t.createElement(s.IU,null,"Syntax:"),t.createElement(s.cJ,null),t.createElement(u.Z,null,t.createElement(s.B,null,"try")," ","{",t.createElement(s.cJ,null),t.createElement(s.Ai,null,"// statements"),t.createElement(s.cJ,null),"}"))),t.createElement(u.Z,null,t.createElement(o.Z,{as:"h2"},"catch block"),t.createElement(u.Z,null,"The ",t.createElement(s.BI,null,"catch")," block contains statements that specify what to do if an ",t.createElement(s.I,null,"exception")," is thrown from the ",t.createElement(s.BI,null,"try block"),".")),t.createElement(u.Z,null,t.createElement(o.Z,{as:"h2"},"finally block"),t.createElement(u.Z,null,"The ",t.createElement(s.BI,null,"finally")," block contains statements to be executed after the ",t.createElement(s.BI,null,"try")," and ",t.createElement(s.BI,null,"catch")," block executes. The ",t.createElement(s.I,null,"finally"),t.createElement(m.Z,null)," block will execute whether or not an exception is thrown."),t.createElement(a.Z,null,'try {\n  throw "Error thrown";\n}\ncatch(e) {\n  console.log(e); // "Error thrown"\n}\nfinally {\n  console.log("Finally block executed");\n}\n'),t.createElement(u.Z,null,"If the ",t.createElement(s.I,null,"finally")," block returns a value, this value becomes the return value of the entire ",t.createElement(s.I,null,"try..catch..finally")," block, overriding values returned from ",t.createElement(s.I,null,"try")," or ",t.createElement(s.I,null,"catch")," block, if any. Often used to perform cleanup tasks like closing connections, unsubscribing, etc.")),t.createElement(u.Z,null,t.createElement(s.IU,null,"Example:"),t.createElement(u.Z,null,"In below example, value returned from ",t.createElement(s.BI,null,"catch")," block will be ignored, because ",t.createElement(s.BI,null,"finally")," block also returns a value."),t.createElement(a.Z,null,'try {\n  throw "Error thrown";\n}\ncatch(e) {\n  console.log(e); // "Error thrown"\n  return false; // Return value will be ignored\n}\nfinally {\n  console.log("Finally block executed");\n  return true;\n}\n')),t.createElement(u.Z,null,t.createElement(o.Z,{as:"h3"},"Error() constructor"),t.createElement(u.Z,null,"The ",t.createElement(s.BI,null,"Error()")," constructor can be used for throwing errors. Error thrown using ",t.createElement(s.I,null,"Error()")," constructor contains many",t.createElement(m.Z,null)," ",t.createElement(s.I,null,"properties"),", out of which we will use ",t.createElement(s.BI,null,"name"),t.createElement(m.Z,null)," and ",t.createElement(s.BI,null,"message")," properties to get more refined error messages. The ",t.createElement(s.BI,null,"name")," property provides the general class of",t.createElement(s.B,null,"Error"),", while ",t.createElement(s.BI,null,"message")," provides a more succinct message."),t.createElement(a.Z,null,'try {\n  throw new Error("Error thrown");\n}\ncatch(e) {\n  console.log(e);\n  // { name: "Error", message: "Error thrown"}\n}\nfinally {\n  console.log("Finally block executed");\n}\n')))};const i=(0,t.memo)(E)},59044:(e,n,l)=>{l.d(n,{Z:()=>p});var t=l(4942),r=l(94184),a=l.n(r),c=l(67294),o=l(83819),u=l(93379),m=l.n(u),s=l(7795),E=l.n(s),i=l(90569),h=l.n(i),Z=l(3565),d=l.n(Z),f=l(19216),w=l.n(f),I=l(44589),b=l.n(I),y=l(94364),g={};g.styleTagTransform=b(),g.setAttributes=d(),g.insert=h().bind(null,"head"),g.domAPI=E(),g.insertStyleElement=w(),m()(y.Z,g),y.Z&&y.Z.locals&&y.Z.locals;var k=function(e){var n=e.children,l=a()((0,t.Z)({},"".concat(o.HL,"-container"),!0));return c.createElement("div",{className:l},n)};const p=(0,c.memo)(k)},9231:(e,n,l)=>{l.d(n,{Z:()=>r});var t=l(67294);const r=function(e){(0,t.useEffect)((function(){return document.title=e,function(){document.title="UI Geeks | UI Learning Platform"}}),[])}},94364:(e,n,l)=>{l.d(n,{Z:()=>o});var t=l(8081),r=l.n(t),a=l(23645),c=l.n(a)()(r());c.push([e.id,".ui-geeks-container{padding:1rem}\n",""]);const o=c}}]);