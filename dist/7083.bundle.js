"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[7083],{87083:(e,t,l)=>{l.r(t),l.d(t,{default:()=>i});var n=l(67294),a=l(81391),r=l(87398),c=l(68947),u=l(12050),m=l(9167),s=[{label:n.createElement(n.Fragment,null,n.createElement(m.BI,null,"Array()"),", ",n.createElement(m.BI,null,"Error()")," and ",n.createElement(m.BI,null,"Function()")," behave the same way, when called as a",n.createElement(m.I,null," function")," or ",n.createElement(m.I,null,"constructor"),".")},{label:n.createElement(n.Fragment,null,n.createElement(m.BI,null,"Boolean()"),", ",n.createElement(m.BI,null,"Number()")," and ",n.createElement(m.BI,null,"String()")," ",n.createElement(u.Z,null),n.createElement(m.I,null,"coerce")," their arguments to the respective ",n.createElement(m.I,null,"primitive type"),n.createElement(u.Z,null)," when called as a ",n.createElement(m.I,null,"function"),", but returns ",n.createElement(u.Z,null),n.createElement(m.I,null,"wrapper objects")," when ",n.createElement(m.I,null,"constructed")," with the ",n.createElement(m.BI,null,"new"),n.createElement(u.Z,null)," operator.")}],o=[{label:n.createElement(n.Fragment,null,n.createElement(m.BI,null,"Symbol()")," and ",n.createElement(m.BI,null,"BigInt()")," can only be called without",n.createElement(m.BI,null,"new"),". Attempting to construct then will throw ",n.createElement(m.B,null,"TypeError"),".")},{label:n.createElement(n.Fragment,null,n.createElement(m.BI,null,"Proxy")," and ",n.createElement(m.BI,null,"Map")," can only be constructed with",n.createElement(m.BI,null,"new"),". Attempting to call them as functions will throw a",n.createElement(m.B,null,"TypeError"),".")}];const i=function(){return n.createElement(n.Fragment,null,n.createElement(c.Z,null,"Prior to ES6, which introduced the ",n.createElement(m.BI,null,"class"),", most JavaScript",n.createElement(u.Z,null)," ",n.createElement(m.I,null,"built-ins")," are both ",n.createElement(m.I,null,"callable")," and ",n.createElement(u.Z,null),n.createElement(m.I,null,"constructible"),", although many of them exhibit different behaviors. For example:"),n.createElement(m.GS,{expanded:!0,items:s}),n.createElement(c.Z,null,"But after ES6, language is stricter about which are ",n.createElement(m.I,null,"constructors"),n.createElement(u.Z,null)," and which are ",n.createElement(m.I,null,"functions"),". For example:"),n.createElement(m.GS,{expanded:!0,items:o}),n.createElement(c.Z,null,n.createElement(r.Z,{as:"h4"},'Using "new" with Classes'),n.createElement(c.Z,null,"Classes can only be instantiated with the ",n.createElement(m.BI,null,"new")," operator. Attempting to call a ",n.createElement(m.I,null,"class")," without ",n.createElement(m.I,null,"new")," will throw",n.createElement(m.B,null,"TypeError"),"."),n.createElement(a.Z,null,'class User {\n  constructor(firstName, lastName) {\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  showName(){\n  console.log(this.firstName + "-" + this.lastName);\n  }\n}\n\nconst user = new User("JavaScript", "Language");\nuser.showName();  // "JavaScript-Language"')))}}}]);