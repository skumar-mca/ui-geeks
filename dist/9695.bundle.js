"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[9695],{9695:(e,a,l)=>{l.r(a),l.d(a,{default:()=>o});var t=l(67294),n=l(81391),r=l(87398),i=l(68947),c=l(12050),s=l(9167),u=l(33470);const o=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h3"},"var"),t.createElement(i.Z,null,"It was the traditional (older) way of declaring variables, therefore, it doesn't have restrictions of block-level. Variables declared with the",t.createElement(s.BI,null,"var")," keyword have ",t.createElement(s.BI,null,"function/global level scope"),t.createElement(c.Z,null),"and therefore are accessible through the function it is declared within.",t.createElement(s.cJ,null),t.createElement(s.cJ,null),t.createElement(u.Z,{italic:!0},"Syntax: ",t.createElement(s.BI,null,"var "),"<variable-name>=<optional-assignment>;"),t.createElement(n.Z,null,'var name;   // uninitialized variable, default value is undefined.\nvar name = "JavaScript";')),t.createElement(i.Z,null,t.createElement(u.Z,{bold:!0},"Scope of var"),t.createElement(n.Z,null,"// myVar is visible here\nfor(var myVar=1; myVar < 5; myVar ++) {\n\t// myVar is visible here\n}\n// myVar is visible here\n// It is available outside the block, because it has function/global level scope.\n")))}}}]);