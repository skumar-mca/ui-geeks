"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[9800],{99800:(e,l,t)=>{t.r(l),t.d(l,{default:()=>o});var n=t(67294),a=t(81391),i=t(87398),r=t(68947),c=t(12050),u=t(9167);const o=function(){return n.createElement(n.Fragment,null,n.createElement(i.Z,{as:"h2"},"Variable Hoisting"),n.createElement(r.Z,null,n.createElement(u.I,null,"Hoisting")," also works with ",n.createElement(u.I,null,"variables")," too, however, JavaScript only ",n.createElement(u.BI,null,"hoists declaration")," and not the",n.createElement(u.BI,null,"initialization")," ",n.createElement(c.Z,null),"i.e, the initialization doesn't happen until the associated line of code is executed, even if the variable was originally initialized and then declared or declared and initialized in the same line. Until that point in the execution is reached, the variable has its default value (",n.createElement(u.I,null,"undefined")," for a variable declared with ",n.createElement(u.BI,null,"var"),", otherwise",n.createElement(c.Z,null)," ",n.createElement(u.I,null,"uninitialized"),")."),n.createElement(r.Z,null,n.createElement(u.IU,null,"Example:"),n.createElement(a.Z,null,'console.log(varVariable); // undefined\nvar name ="JavaScript";\n')),n.createElement(r.Z,null,"If we forget the ",n.createElement(u.BI,null,"declaration")," altogether (and only",n.createElement(c.Z,null)," ",n.createElement(u.I,null,"initialize")," ",n.createElement(c.Z,null),"the value) the variable ",n.createElement(u.BI,null,"isn't hoisted"),". Trying to access the variable before it is initialized will result in ",n.createElement(u.B,null,"ReferenceError"),"."),n.createElement(r.Z,null,"The below statement will throw ",n.createElement(u.B,null,"ReferenceError"),", because",n.createElement(u.BI,null,"num")," was not ",n.createElement(u.I,null,"hoisted"),"."),n.createElement(a.Z,null,"console.log(num); // ReferenceError\nnum = 10;\n"))}}}]);