"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[7761],{37761:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});var r=t(67294),l=t(81391),a=t(87398),u=t(68947),c=t(12050),o=t(9167),i=t(33470);const s=function(){return r.createElement(r.Fragment,null,r.createElement(a.Z,{as:"h4"},"Parsing Order"),r.createElement(u.Z,null,"Although the ",r.createElement(o.BI,null,"fat arrow")," ","(=>)"," in an arrow function is not an",r.createElement(o.BI,null,"operator"),", arrow functions have special parsing rules that interact differently with ",r.createElement(o.BI,null,"operator precedence")," compared to traditional functions."),r.createElement(l.Z,null,"let defaultFunc;\ndefaultFunc = defaultFunc || () => { };\n// SyntaxError: invalid arrow function arguments\n"),r.createElement(u.Z,null,"The ",r.createElement(o.B,null,"SyntaxError")," is because ","=>"," has a lower precedence than other operators."),r.createElement(u.Z,null,r.createElement(i.Z,{bold:!0,underline:!0},"Correct way"),r.createElement(c.Z,null),"would be:",r.createElement(o.cJ,null),"Parentheses are necessary to avoid",r.createElement(i.Z,{bold:!0,underline:!0},"defaultFunc || ()"),r.createElement(c.Z,null),"being parsed as the arguments of the arrow function.",r.createElement(l.Z,null,"let defaultFunc;\ndefaultFunc = defaultFunc || (() => { });\n")))}}}]);