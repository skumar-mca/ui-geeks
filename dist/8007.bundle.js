"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[8007],{98007:(e,n,t)=>{t.r(n),t.d(n,{default:()=>i});var l=t(67294),u=t(81391),r=t(87398),a=t(68947),c=t(12050),s=t(9167);const i=function(){return l.createElement(l.Fragment,null,l.createElement(r.Z,{as:"h3"},"Props are Read-Only"),l.createElement(a.Z,null,"Whether we declare a component as class or function, it must never modify its own ",l.createElement(s.I,null,"props"),". All React components must act like",l.createElement(c.Z,null)," ",l.createElement(s.BI,null,"pure functions")," with respect to their props."),l.createElement(r.Z,{as:"h4"},"What are pure functions?"),l.createElement(a.Z,null,"Functions which do not modify the value of their inputs are called",l.createElement(c.Z,null)," ",l.createElement(s.BI,null,'"pure"')," functions."),l.createElement(a.Z,null,l.createElement(s.IU,null,"Example:"),l.createElement(u.Z,null,"function sum(a, b) {\n  return a + b;\n}\n")),l.createElement(a.Z,null,"Above function ",l.createElement(s.B,null,'"sum"')," is a pure function, because it did not modify the input values, which assures that this function will always return the same result for the same inputs."),l.createElement(a.Z,null,"In contrast to this, ",l.createElement(s.BI,null,'"impure" functions')," are ones which modify the values of their inputs."),l.createElement(a.Z,null,l.createElement(s.IU,null,"Example:"),l.createElement(u.Z,null,"function changeUserAge(user) {\n  user.age += 10;\n  return user;\n}")),l.createElement(a.Z,null,"Above function ",l.createElement(s.B,null,'"changeUserAge"')," is an impure function, since it modifies the input value ",l.createElement(s.B,null,'"user"'),"."))}}}]);