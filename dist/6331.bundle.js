"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[6331,6006,7893],{6331:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var a=n(67294),l=n(81391),r=n(87398),s=n(26006),i=n(68947),o=n(12050),c=n(9167);const m=function(){return a.createElement(a.Fragment,null,a.createElement(r.Z,{as:"h2"},"Rest parameters"),a.createElement(i.Z,null,"Using ",a.createElement(c.BI,null,"arguments")," ",a.createElement(c.I,null,"object")," is pretty useful, but it does seem a little ",a.createElement(o.Z,null)," ",a.createElement(c.I,null,"verbose"),", because by looking at the function ",a.createElement(c.I,null,"declaration/expression"),", we can't predict whether the function expects any ",a.createElement(c.I,null,"argument")," or not. To make functions more readable, we can replace ",a.createElement(c.BI,null,"arguments")," with"," ",a.createElement(c.B,null,'"rest parameters"'),"."),a.createElement(i.Z,null,"Rest parameters allows a function to accept an indefinite number of arguments. This was introduced in ",a.createElement(c.B,null,"ES6"),"."),a.createElement(i.Z,null,a.createElement(c.I,null,"Writing the same add() function with the use of rest parameters.")),a.createElement(l.Z,null,"function add(...args) {\n  let sum = 0;\n  for(const itm of args) { sum += itm; }\n    return sum;\n}\n\nconst result = add(1, 2, 5, 10);  // 18"),a.createElement(s.Z,null,"It is important to note that wherever the rest parameters are placed in function declaration, it will store all arguments ",a.createElement(c.B,null,"after")," its declaration, but ",a.createElement(c.B,null,"not before"),".",a.createElement(l.Z,null,"function add(firstValue, â€¦args) {}\nadd(1, 2, 5, 10)"),a.createElement(c.B,null,"1")," will be assigned to the ",a.createElement(c.B,null,'"firstValue"')," parameter, while",a.createElement(c.B,null,"2"),", ",a.createElement(c.B,null,"5"),a.createElement(o.Z,null),"and ",a.createElement(c.B,null,"10")," will be assigned to the rest parameter ",a.createElement(c.B,null,'"args"'),"."))}},26006:(e,t,n)=>{n.d(t,{Z:()=>V});var a=n(4942),l=n(94184),r=n.n(l),s=n(67294),i=n(14289),o=n(78146),c=n(67115),m=n(76792),u=n(32209),d=n(41485),p=n(39602),f=n(44680),E=n(85893);const h=(0,p.Z)("h4");h.displayName="DivStyledAsH4";const g=(0,f.Z)("alert-heading",{Component:h}),b=(0,f.Z)("alert-link",{Component:c.Z}),Z={variant:"primary",show:!0,transition:u.Z,closeLabel:"Close alert"},v=s.forwardRef(((e,t)=>{const{bsPrefix:n,show:a,closeLabel:l,closeVariant:s,className:c,children:p,variant:f,onClose:h,dismissible:g,transition:b,...Z}=(0,i.Ch)(e,{show:"onClose"}),v=(0,m.vE)(n,"alert"),w=(0,o.Z)((e=>{h&&h(!1,e)})),x=!0===b?u.Z:b,k=(0,E.jsxs)("div",{role:"alert",...x?void 0:Z,ref:t,className:r()(c,v,f&&`${v}-${f}`,g&&`${v}-dismissible`),children:[g&&(0,E.jsx)(d.Z,{onClick:w,"aria-label":l,variant:s}),p]});return x?(0,E.jsx)(x,{unmountOnExit:!0,...Z,ref:void 0,in:a,children:k}):a?k:null}));v.displayName="Alert",v.defaultProps=Z;const w=Object.assign(v,{Link:b,Heading:g});var x=n(83819),k=n(93379),y=n.n(k),B=n(7795),C=n.n(B),I=n(90569),N=n.n(I),j=n(3565),T=n.n(j),A=n(19216),L=n.n(A),_=n(44589),H=n.n(_),P=n(11137),R={};R.styleTagTransform=H(),R.setAttributes=T(),R.insert=N().bind(null,"head"),R.domAPI=C(),R.insertStyleElement=L(),y()(P.Z,R),P.Z&&P.Z.locals&&P.Z.locals;var S=function(e){var t=e.children,n=e.noteText,l=void 0===n?"Note":n,i=e.variant,o=void 0===i?"primary":i,c=r()((0,a.Z)({},"".concat(x.HL,"-note"),!0));return s.createElement("div",{className:c},s.createElement("div",{className:"note-text"},l),s.createElement(w,{key:o,variant:o},t))};const V=(0,s.memo)(S)},11137:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(8081),l=n.n(a),r=n(23645),s=n.n(r)()(l());s.push([e.id,".ui-geeks-note{margin-top:1.2rem;margin-bottom:3rem;font-style:italic}.ui-geeks-note .note-text{font-style:italic;position:relative;font-weight:bold;top:13px;z-index:9;margin-left:15px;background-color:#aba8f1;width:fit-content;padding:2px 10px 2px 10px;border-radius:4px}\n",""]);const i=s}}]);