"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[8117,2711,49,1172,8007,9200,1878,4042,6411],{94683:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var l=n(67294),a=n(81391),r=n(91573),c=n(26006),o=n(68947),s=n(12050),u=n(9167);const m=function(){return l.createElement(l.Fragment,null,l.createElement(o.Z,null,"We can also use ",l.createElement(u.BI,null,"ES6 class")," to define a component. The defined",l.createElement(s.Z,null)," ",l.createElement(u.I,null,"class")," should ",l.createElement(u.B,null,"extend")," ",l.createElement(u.BI,null,"React.Component"),"."),l.createElement(a.Z,{language:r.r.JSX},"class Welcome extends React.Component {\n  render() {\n    return <h1>Hello from React!</h1>\n  }\t\n}\n"),l.createElement(o.Z,null,l.createElement(u.B,null,"render()"),": A class component should have a render() function, which returns the React element."),l.createElement(c.Z,null,"Before ",l.createElement(u.B,null,"version 16.8"),", only class components can be ",l.createElement(u.B,null,"stateful"),l.createElement(s.Z,null)," components. Function components were used as ",l.createElement(u.B,null,"stateless"),l.createElement(s.Z,null)," components. But with the introduction of ",l.createElement(u.B,null,"Hooks in v16.8"),", function components can also be ",l.createElement(u.B,null,"stateful"),". React prefers function components over class components for",l.createElement(u.B,null,"performance benefits"),"."),l.createElement(c.Z,null,"Always start component names with a ",l.createElement(u.B,null,"Capital letter"),". React treats components starting with ",l.createElement(u.B,null,"lowercase letters")," as ",l.createElement(u.B,null,"DOM")," tags. For example, ",l.createElement(u.B,null,"<div />")," represents an HTML tag, but ",l.createElement(s.Z,null),l.createElement(u.B,null,"<Welcome />")," ",l.createElement(s.Z,null)," represents a component and requires",l.createElement(s.Z,null)," ",l.createElement(u.B,null,"Welcome")," to be in scope."))}},83349:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var l=n(67294),a=n(9231),r=n(59044),c=n(87398),o=n(68947),s=n(12050),u=n(9167),m=n(94683),i=n(56411),p=n(62711),E=n(60049),h=n(29200);const d=function(){return(0,a.Z)("UI-Geeks: React | Components"),l.createElement(r.Z,null,l.createElement(c.Z,null,"Components"),l.createElement(o.Z,null,"Components let us split the UI into independent, reusable pieces, and think about each piece in isolation. Conceptually, components are like JavaScript ",l.createElement(u.I,null,"functions"),". They accept arbitrary ",l.createElement(u.B,null,"inputs")," (called",l.createElement(s.Z,null)," ",l.createElement(u.BI,null,'"props"'),") and return ",l.createElement(u.BI,null,"React elements"),"."),l.createElement(o.Z,null,"React provides two types of components:",l.createElement(u.GS,{items:[{label:"Function Components"},{label:"Class Components"}]})),l.createElement(o.Z,null,l.createElement(p.default,null),l.createElement(c.Z,{as:"h2"},"Class Component"),l.createElement(m.default,null),l.createElement(E.default,null),l.createElement(h.default,null),l.createElement(i.default,null)))}},62711:(e,t,n)=>{n.r(t),n.d(t,{default:()=>c});var l=n(67294),a=n(87398),r=n(64042);const c=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"Function Component"),l.createElement(r.default,null))}},91172:(e,t,n)=>{n.r(t),n.d(t,{default:()=>m});var l=n(67294),a=n(81391),r=n(91573),c=n(87398),o=n(68947),s=n(12050),u=n(9167);const m=function(){return l.createElement(l.Fragment,null,l.createElement(c.Z,{as:"h2"},"Props"),l.createElement(o.Z,null,"Props are the input object to the component. It holds all the input values passed to the components."),l.createElement(o.Z,null,"Let's add ",l.createElement(u.BI,null,'"prop"')," to our ",l.createElement(u.B,null,"Welcome")," component."),l.createElement(a.Z,{language:r.r.JSX},"function Welcome(props) {\n    return <h1>Hello, {props.userName}</h1>\n}"),l.createElement(o.Z,null,"In the case of a ",l.createElement(u.BI,null,"class component"),", ",l.createElement(u.B,null,'"this"')," refers to the",l.createElement(s.Z,null)," ",l.createElement(u.I,null,"class context"),", therefore, ",l.createElement(u.BI,null,'"this.props"')," points to the input values of the class component."),l.createElement(a.Z,{language:r.r.JSX},"class Welcome extends React.Component {\n    render() {\n        return <h1>Hello, {this.props.userName}</h1>\n    }\t\n}"),l.createElement(o.Z,null,"Passing input ",l.createElement(u.BI,null,"props")," to the component."),l.createElement(a.Z,{language:r.r.JSX},'const element = <Welcome userName="John" />;\nconst element1 = <Welcome userName="Jack" />;\n'),l.createElement(o.Z,null,"In particular, ",l.createElement(u.BI,null,"this.props.children")," is a special ",l.createElement(u.I,null,"prop"),", typically defined by the child tags in the JSX expression rather than the tag itself."),l.createElement(o.Z,null,l.createElement(u.IU,null,"Example:")),l.createElement(a.Z,{language:r.r.JSX},"class Welcome extends React.Component {\n    render() {\n        return <h1>\n            Hello, {this.props.userName}\n            {this.props.children}\n        </h1>\n    }\t\n}"),l.createElement(a.Z,{language:r.r.JSX},'const element = <Welcome userName="John">, age is 25.</Welcome>'),l.createElement(o.Z,null,"Above will render ",l.createElement(u.B,null,'"Hello, John, age is 25."'),", because everything between the opening and closing tags becomes the value of ",l.createElement(s.Z,null),l.createElement(u.BI,null,"this.props.children"),"."))}},98007:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var l=n(67294),a=n(81391),r=n(87398),c=n(68947),o=n(12050),s=n(9167);const u=function(){return l.createElement(l.Fragment,null,l.createElement(r.Z,{as:"h3"},"Props are Read-Only"),l.createElement(c.Z,null,"Whether we declare a component as class or function, it must never modify its own ",l.createElement(s.I,null,"props"),". All React components must act like",l.createElement(o.Z,null)," ",l.createElement(s.BI,null,"pure functions")," with respect to their props."),l.createElement(r.Z,{as:"h4"},"What are pure functions?"),l.createElement(c.Z,null,"Functions which do not modify the value of their inputs are called",l.createElement(o.Z,null)," ",l.createElement(s.BI,null,'"pure"')," functions."),l.createElement(c.Z,null,l.createElement(s.IU,null,"Example:"),l.createElement(a.Z,null,"function sum(a, b) {\n  return a + b;\n}\n")),l.createElement(c.Z,null,"Above function ",l.createElement(s.B,null,'"sum"')," is a pure function, because it did not modify the input values, which assures that this function will always return the same result for the same inputs."),l.createElement(c.Z,null,"In contrast to this, ",l.createElement(s.BI,null,'"impure" functions')," are ones which modify the values of their inputs."),l.createElement(c.Z,null,l.createElement(s.IU,null,"Example:"),l.createElement(a.Z,null,"function changeUserAge(user) {\n  user.age += 10;\n  return user;\n}")),l.createElement(c.Z,null,"Above function ",l.createElement(s.B,null,'"changeUserAge"')," is an impure function, since it modifies the input value ",l.createElement(s.B,null,'"user"'),"."))}},60049:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var l=n(67294),a=n(68947),r=n(91172),c=n(98007);const o=function(){return l.createElement(l.Fragment,null,l.createElement(r.default,null),l.createElement(a.Z,null,l.createElement(c.default,null)))}},11878:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var l=n(67294),a=n(87398),r=n(68947),c=n(12050),o=n(9167);const s=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"State"),l.createElement(r.Z,null,"State is a way to ",l.createElement(o.B,null,'"preserve"')," values between multiple renders.",l.createElement(c.Z,null)," ",l.createElement(o.I,null,"State")," is ",l.createElement(o.BI,null,"local")," to the component, which means the ",l.createElement(o.I,null,"state")," of a component can't be accessed by another component, unless ",l.createElement(o.I,null,"state")," value is passed as ",l.createElement(o.BI,null,'"prop"')," to another component."),l.createElement(a.Z,{as:"h3"},"Unidirectional or top-down data flow"),l.createElement(r.Z,null,"Neither parent nor child components can know if a certain component is stateful or stateless. This is why the state is often called local or encapsulated. It is not accessible to any other component other than the one that owns and sets it. A component may choose to pass its state as props to its child components."),l.createElement(r.Z,null,"This is commonly called a ",l.createElement(o.B,null,'"top-down"')," or ",l.createElement(o.B,null,'"unidirectional"'),l.createElement(c.Z,null)," data flow. Any state is always owned by sme specific component, and any data or UI derived from that state can only affect components ",l.createElement(o.B,null,'"below" them in the tree'),"."))}},29200:(e,t,n)=>{n.r(t),n.d(t,{default:()=>r});var l=n(67294),a=n(11878);const r=function(){return l.createElement(l.Fragment,null,l.createElement(a.default,null))}},64042:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var l=n(67294),a=n(81391),r=n(91573),c=n(68947),o=n(9167);const s=function(){return l.createElement(l.Fragment,null,l.createElement(c.Z,null,"This is the simplest way to define a component."),l.createElement(a.Z,{language:r.r.JSX},"function Welcome(props) {\n  return <h1>Hello, {props.userName}</h1>\n}"),l.createElement(c.Z,null,"Above function is a valid React ",l.createElement(o.I,null,"component")," because it accepts a single ",l.createElement(o.I,null,"input")," ",l.createElement(o.BI,null,'"props"')," (which stands for ",l.createElement(o.B,null,"properties"),") ",l.createElement(o.I,null,"object argument")," and it returns a React element. Such components are called ",l.createElement(o.BI,null,'"function components"')," because they are literally JavaScript ",l.createElement(o.I,null,"functions"),"."))}},56411:(e,t,n)=>{n.r(t),n.d(t,{default:()=>o});var l=n(67294),a=n(87398),r=n(68947),c=n(9167);const o=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h2"},"Phases of a component"),l.createElement(r.Z,null,"Every component goes through three phases:",l.createElement(c.GS,{items:[{label:"Mounting"},{label:"Updating"},{label:"Unmounting"}]})),l.createElement(a.Z,{as:"h3"},"Mounting Phase"),l.createElement(r.Z,null,"Mounting is the phase where the component is created and inserted into the DOM."),l.createElement(a.Z,{as:"h3"},"Updating Phase"),l.createElement(r.Z,null,"An update can be caused by changes to ",l.createElement(c.BI,null,"props")," or ",l.createElement(c.BI,null,"state"),". Whenever the value of ",l.createElement(c.I,null,"props")," or ",l.createElement(c.I,null,"state")," is changed, React",l.createElement(c.B,null,"re-renders")," the component to reflect updated values on the UI. The lifecycle methods of the update phase are called on every update."),l.createElement(a.Z,{as:"h3"},"Unmounting Phase"),l.createElement(r.Z,null,"Unmounting is the phase where a component is removed from the DOM. Components go out of scope and the lifecycle method of unmounting phase can be used to perform ",l.createElement(c.B,null,"cleanup activities"),"."))}}}]);