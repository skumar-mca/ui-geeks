"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[3499,6006,7893,537],{537:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var a=t(67294),l=t(81391),o=t(91573),i=t(87398),s=t(26006),r=t(68947),c=t(12050),u=t(9167);const m=function(){return a.createElement(a.Fragment,null,a.createElement(i.Z,{as:"h2"},"Controlled Components"),a.createElement(r.Z,null,"In HTML, form elements such as ",a.createElement(u.I,null,"<input>, <select>, <textarea>"),a.createElement(c.Z,null)," typically maintain their own state and update it based on user input."),a.createElement(r.Z,null,"But, in React, mutable state is typically kept in the state property of the components and updated by React. In such a case, React state is the",a.createElement(u.B,null,'"single source of truth"'),". An input form element whose value is controlled by React is called a ",a.createElement(u.B,null,'"controlled component"'),". With a controlled component, the input's value is always driven by the React state."),a.createElement(r.Z,null,a.createElement(u.IU,null,"Example:"),a.createElement(l.Z,{language:o.r.JSX},'const CustomForm = () => {\n  const [name, setName] = useState("");\n  const [experience, setHasExperience] = useState("no");\n\t\n  const handleChange = (evt) => {\n    setName(() => evt.target.value);\n  }\n\n  const handleExpChange = (evt) => {\n    setHasExperience(() => evt.target.value);\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log("Name: ", name);\n    console.log("React Experience: ", experience);\n  }\n\n  return <form onSubmit={handleSubmit}>\n    <label>Name: \n      <input type=”text” value={name} onChange={handleChange} />\n    <label>\n\n    <label>Have React Experience: \n      <select value={experience} onChange={handleExpChange}>\n        <option value="yes">Yes</option>\n        <option value="no">No</option>\n      </select>\n    <label>\n\n    <button type="submit">Submit</button>\n  </form>\n}\n')),a.createElement(s.Z,null,"We can pass an array into the value attribute, allowing us to select multiple options in a ","<select>"," tag.",a.createElement(l.Z,{language:o.r.JSX},'<select multiple={true} value={["a", "c"]}>\n  <option value="a">A</option>\n  <option value="b">B</option>\n  <option value="c">C</option>\n  <option value="d">D</option>\n</select>')))}},26006:(e,n,t)=>{t.d(n,{Z:()=>P});var a=t(4942),l=t(94184),o=t.n(l),i=t(67294),s=t(14289),r=t(78146),c=t(67115),u=t(76792),m=t(32209),p=t(41485),d=t(39602),v=t(44680),h=t(85893);const b=(0,d.Z)("h4");b.displayName="DivStyledAsH4";const g=(0,v.Z)("alert-heading",{Component:b}),x=(0,v.Z)("alert-link",{Component:c.Z}),E={variant:"primary",show:!0,transition:m.Z,closeLabel:"Close alert"},f=i.forwardRef(((e,n)=>{const{bsPrefix:t,show:a,closeLabel:l,closeVariant:i,className:c,children:d,variant:v,onClose:b,dismissible:g,transition:x,...E}=(0,s.Ch)(e,{show:"onClose"}),f=(0,u.vE)(t,"alert"),y=(0,r.Z)((e=>{b&&b(!1,e)})),Z=!0===x?m.Z:x,C=(0,h.jsxs)("div",{role:"alert",...Z?void 0:E,ref:n,className:o()(c,f,v&&`${f}-${v}`,g&&`${f}-dismissible`),children:[g&&(0,h.jsx)(p.Z,{onClick:y,"aria-label":l,variant:i}),d]});return Z?(0,h.jsx)(Z,{unmountOnExit:!0,...E,ref:void 0,in:a,children:C}):a?C:null}));f.displayName="Alert",f.defaultProps=E;const y=Object.assign(f,{Link:x,Heading:g});var Z=t(83819),C=t(93379),k=t.n(C),w=t(7795),N=t.n(w),S=t(90569),R=t.n(S),H=t(3565),A=t.n(H),I=t(19216),L=t.n(I),j=t(44589),B=t.n(j),T=t(11137),_={};_.styleTagTransform=B(),_.setAttributes=A(),_.insert=R().bind(null,"head"),_.domAPI=N(),_.insertStyleElement=L(),k()(T.Z,_),T.Z&&T.Z.locals&&T.Z.locals;var D=function(e){var n=e.children,t=e.noteText,l=void 0===t?"Note":t,s=e.variant,r=void 0===s?"primary":s,c=o()((0,a.Z)({},"".concat(Z.HL,"-note"),!0));return i.createElement("div",{className:c},i.createElement("div",{className:"note-text"},l),i.createElement(y,{key:r,variant:r},n))};const P=(0,i.memo)(D)},11137:(e,n,t)=>{t.d(n,{Z:()=>s});var a=t(8081),l=t.n(a),o=t(23645),i=t.n(o)()(l());i.push([e.id,".ui-geeks-note{margin-top:1.2rem;margin-bottom:3rem;font-style:italic}.ui-geeks-note .note-text{font-style:italic;position:relative;font-weight:bold;top:13px;z-index:9;margin-left:15px;background-color:#aba8f1;width:fit-content;padding:2px 10px 2px 10px;border-radius:4px}\n",""]);const s=i}}]);