"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[4338],{64338:(e,n,l)=>{l.r(n),l.d(n,{default:()=>m});var t=l(67294),a=l(81391),r=l(87398),u=l(68947),c=l(12050),s=l(9167);const m=function(){return t.createElement(t.Fragment,null,t.createElement(r.Z,{as:"h4"},"call()"),t.createElement(u.Z,null,"This method calls the function with given ",t.createElement(s.BI,null,"this")," value and",t.createElement(c.Z,null),t.createElement(s.I,null,"arguments"),t.createElement(c.Z,null),"provided individually."),t.createElement(u.Z,null,t.createElement(s.I,null,"Syntax:")),t.createElement(u.Z,null,"call()",t.createElement(s.cJ,null),t.createElement(s.BI,null,"this")," will be replaced with ",t.createElement(s.BI,null,"global")," in ",t.createElement(c.Z,null),t.createElement(s.I,null,"non-strict mode")," and ",t.createElement(s.BI,null,"undefined")," in ",t.createElement(s.I,null,"strict mode"),"."),t.createElement(u.Z,null,"call(",t.createElement(s.BI,null,"thisArg"),")",t.createElement(s.cJ,null),t.createElement(s.BI,null,"this")," will be replaced with ",t.createElement(s.BI,null,"thisArg"),"."),t.createElement(u.Z,null,"call(",t.createElement(s.BI,null,"thisArg"),", arg1, arg2, â€¦, argN)",t.createElement(s.cJ,null),t.createElement(s.BI,null,"this")," will be replaced with ",t.createElement(s.BI,null,"thisArg")," and following",t.createElement(c.Z,null)," ",t.createElement(s.I,null,"arguments")," will be assigned to function ",t.createElement(s.I,null,"arguments"),"."),t.createElement(u.Z,null,t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nvar a = 100;\nvar b = 200;\n// Both variables are declared in the global object.\n\nconst res = sum.call(null, 2, 5);\nconsole.log(res)  // 307\n// Because null was passed as the value of thisArg,\n// this was replaced with the global object.\n// Therefore:   100  +  200    +  2   +  5   = 307\n                this.a  this.b   num1   num2\n")),t.createElement(u.Z,null,t.createElement(a.Z,null,"function sum(num1, num2) {\n  return this.a + this.b + num1 + num2;\n}\nconst obj = {  a: 10, b: 20 };\nconst res = sum.call(obj, 5, 25);\nconsole.log(res)  // 60\n// Therefore:   10    +  20    +  5   +  25   = 60\n                this.a  this.b   num1   num2\n")),t.createElement(u.Z,null,"The ",t.createElement(s.B,null,"call()")," allows for a function/method belonging to one object to be assigned and called for a different object."),t.createElement(a.Z,null,"const obj = { \n   a: 10,\n   b: 20,\n   sum(num1, num2) {\n    return this.a + this.b + num1 + num2);\n  }\n};\n\nconst anotherObj = { a: 100, b: 200 };\nconst res = obj.sum.call(anotherObj, 5, 5);\nconsole.log(res)  // 307"))}}}]);