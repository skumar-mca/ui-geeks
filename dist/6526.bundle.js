"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[6526],{76526:(e,n,t)=>{t.r(n),t.d(n,{default:()=>m});var l=t(67294),a=t(81391),r=t(87398),u=t(68947),c=t(9167);const m=function(){return l.createElement(l.Fragment,null,l.createElement(r.Z,{as:"h2"},"Function declaration"),l.createElement(u.Z,null,l.createElement(c.B,null,"function")," keyword is used to declare a function."),l.createElement(u.Z,null,l.createElement(c.I,null,"Syntax:"),l.createElement(c.cJ,null),l.createElement(c.B,null,"function "),l.createElement(c.BI,null,"<","name-of-function"),">","(",l.createElement(c.BI,null,"<","parameters",">"),") ","{",l.createElement(c.cJ,null),l.createElement(c.Ai,null,"..."),l.createElement(c.cJ,null),l.createElement(c.Ai,null,l.createElement(c.I,null,"<","body of function",">")),l.createElement(c.cJ,null),"}"),l.createElement(u.Z,null,l.createElement(c.B,null,"name-of-function"),": A valid identifier/name for the created function."),l.createElement(u.Z,null,l.createElement(c.B,null,"parameters"),": These are named parameters/arguments. A function can have 0 (zero) or more parameters."),l.createElement(u.Z,null,l.createElement(c.B,null,"return"),": statement is used to return any valid value from the function. This value is returned to the ",l.createElement(c.I,null,"caller")," of the function,",l.createElement(c.B,null,"terminating")," the function. If no ",l.createElement(c.I,null,"return")," statement is given, then JavaScript returns ",l.createElement(c.I,null,"undefined"),"."),l.createElement(a.Z,null,'function add(a, b) { return a + b; } \n// <name-of-function> is "add", while <parameters> are "a" and "b".'))}}}]);