"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[1908,6006,7893],{51908:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var l=n(67294),a=n(81391),s=n(91573),r=n(87398),i=n(26006),o=n(68947),m=n(12050),c=n(9167);const u=function(){return l.createElement(l.Fragment,null,l.createElement(r.Z,{as:"h2"},"Keys"),l.createElement(o.Z,null,"Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity."),l.createElement(o.Z,null,"Let's add a ",l.createElement(c.BI,null,"key")," to elements of our last example."),l.createElement(o.Z,null,l.createElement(c.IU,null,"Example:"),l.createElement(a.Z,{language:s.r.JSX},"const ListComponent = (props) => {\n  const { items } = props;\n\n  const listElements = items.map((names) => {\n    return <li key={name}>{name}</li>\n  }\n\n  return <ul>{listElements}</ul>\n}\n")),l.createElement(o.Z,null,"If we do not add an ",l.createElement(c.B,null,"explicit key")," to list items then React will use the",l.createElement(c.B,null,"array indexes")," as the ",l.createElement(c.I,null,"keys"),"."),l.createElement(i.Z,null,"React ",l.createElement(c.B,null,"doesn't")," recommend using indexes for keys if the ",l.createElement(m.Z,null),l.createElement(c.B,null,"order of items may change"),". This can negatively ",l.createElement(m.Z,null),l.createElement(c.B,null,"impact performance")," and may cause issues with component state."),l.createElement(o.Z,null,l.createElement(c.BI,null,"Keys")," serve as a hint to React but they don't get passed to our components."),l.createElement(o.Z,null,l.createElement(c.IU,null,"Example:"),l.createElement(a.Z,{language:s.r.JSX},"const element = items.map((item) =>{\n  <ListComponent \n    key={item.id} \n    id={item.id} />\n});\n")),l.createElement(o.Z,null,"In the above example, ",l.createElement(c.B,null,"ListComponent")," can read ",l.createElement(c.BI,null,"props.id"),", but not ",l.createElement(c.BI,null,"props.key"),"."),l.createElement(r.Z,{as:"h3"},"Keys must only be unique among siblings"),l.createElement(o.Z,null,"Keys used within arrays should be unique among their siblings. However, they don't need to be globally unique. We can use the same keys with two different arrays."))}},26006:(e,t,n)=>{n.d(t,{Z:()=>q});var l=n(4942),a=n(94184),s=n.n(a),r=n(67294),i=n(14289),o=n(78146),m=n(67115),c=n(76792),u=n(32209),d=n(41485),p=n(39602),h=n(44680),E=n(85893);const y=(0,p.Z)("h4");y.displayName="DivStyledAsH4";const g=(0,h.Z)("alert-heading",{Component:y}),Z=(0,h.Z)("alert-link",{Component:m.Z}),v={variant:"primary",show:!0,transition:u.Z,closeLabel:"Close alert"},b=r.forwardRef(((e,t)=>{const{bsPrefix:n,show:l,closeLabel:a,closeVariant:r,className:m,children:p,variant:h,onClose:y,dismissible:g,transition:Z,...v}=(0,i.Ch)(e,{show:"onClose"}),b=(0,c.vE)(n,"alert"),f=(0,o.Z)((e=>{y&&y(!1,e)})),x=!0===Z?u.Z:Z,k=(0,E.jsxs)("div",{role:"alert",...x?void 0:v,ref:t,className:s()(m,b,h&&`${b}-${h}`,g&&`${b}-dismissible`),children:[g&&(0,E.jsx)(d.Z,{onClick:f,"aria-label":a,variant:r}),p]});return x?(0,E.jsx)(x,{unmountOnExit:!0,...v,ref:void 0,in:l,children:k}):l?k:null}));b.displayName="Alert",b.defaultProps=v;const f=Object.assign(b,{Link:Z,Heading:g});var x=n(83819),k=n(93379),w=n.n(k),C=n(7795),B=n.n(C),I=n(90569),L=n.n(I),N=n(3565),K=n.n(N),R=n(19216),j=n.n(R),A=n(44589),H=n.n(A),S=n(11137),T={};T.styleTagTransform=H(),T.setAttributes=K(),T.insert=L().bind(null,"head"),T.domAPI=B(),T.insertStyleElement=j(),w()(S.Z,T),S.Z&&S.Z.locals&&S.Z.locals;var _=function(e){var t=e.children,n=e.noteText,a=void 0===n?"Note":n,i=e.variant,o=void 0===i?"primary":i,m=s()((0,l.Z)({},"".concat(x.HL,"-note"),!0));return r.createElement("div",{className:m},r.createElement("div",{className:"note-text"},a),r.createElement(f,{key:o,variant:o},t))};const q=(0,r.memo)(_)},11137:(e,t,n)=>{n.d(t,{Z:()=>i});var l=n(8081),a=n.n(l),s=n(23645),r=n.n(s)()(a());r.push([e.id,".ui-geeks-note{margin-top:1.2rem;margin-bottom:3rem;font-style:italic}.ui-geeks-note .note-text{font-style:italic;position:relative;font-weight:bold;top:13px;z-index:9;margin-left:15px;background-color:#aba8f1;width:fit-content;padding:2px 10px 2px 10px;border-radius:4px}\n",""]);const i=r}}]);