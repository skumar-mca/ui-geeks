"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[3919],{13919:(e,t,l)=>{l.r(t),l.d(t,{default:()=>i});var n=l(67294),r=l(81391),a=l(87398),o=l(68947),u=l(12050),c=l(9167);const i=function(){return n.createElement(n.Fragment,null,n.createElement(o.Z,null,n.createElement(a.Z,{as:"h3"},"Equality Operators"),"Used to check the equality of the operands, and returns a boolean value, based on whether comparison is ",n.createElement(c.BI,null,"true")," or ",n.createElement(c.BI,null,"false"),"."),n.createElement(a.Z,{as:"h4"},"Type Coercion"),n.createElement(o.Z,null,"The double equality (==) and inequality (!=) operator performs type",n.createElement(c.BI,null,"coercion"),", if it received different types.",n.createElement(c.I,null,"Type Coercion")," is automatic or implicit conversion of values from one data type to another."),n.createElement(o.Z,null,n.createElement(a.Z,{as:"h5"},'Equality "==" Operator'),"Attempts to convert ",n.createElement(c.I,null,"(Type Coercion)")," and compare operands for equality. Returns",n.createElement(c.B,null,"boolean")," value.",n.createElement(r.Z,null,'"1" == 1      // true\n"hello" == "hello"      // true')),n.createElement(a.Z,{as:"h5"},'InEquality "!=" Operator'),"Attempts to convert ",n.createElement(c.I,null,"(Type Coercion)")," and compare operands for inequality. Returns ",n.createElement(c.B,null,"boolean")," value.",n.createElement(c.B,null,"boolean")," value.",n.createElement(r.Z,null,'"1" != 1      // false\n"Hello" != "hello"      // false'),n.createElement(a.Z,{as:"h5"},'Strict Equality "===" Operator'),"Strict equality operator, checks for equality of operands,",n.createElement(c.B,null,"without")," ",n.createElement(u.Z,null)," converting ",n.createElement(c.I,null,"(Type Coercion)")," the values before comparison. This considers operands of different types to be different. Returns",n.createElement(c.B,null,"boolean")," value.",n.createElement(r.Z,null,'"1" === 1    // false\n1 === 1    // true'),n.createElement(o.Z,null,n.createElement(a.Z,{as:"h5"},'Strict InEquality "!==" Operator'),"Strict inequality operator, checks for inequality of operands,",n.createElement(c.B,null,"without")," ",n.createElement(u.Z,null)," converting ",n.createElement(c.I,null,"(Type Coercion)")," the values before comparison. This considers operands of different types to be different. Returns",n.createElement(c.B,null,"boolean")," value.",n.createElement(r.Z,null,'"1" !== 1   // true\n2 !== 2     // false')))}}}]);