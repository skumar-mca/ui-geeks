"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[4553],{14553:(e,l,n)=>{n.r(l),n.d(l,{OperatorQuestions:()=>u});var t=n(67294),a=n(83819),r=n(81391),o=n(9167),c=n(53232),u=[{id:1,question:t.createElement(t.Fragment,null,"All binary operators in JavaScript are ",a.Fb,"."),options:[{label:"infix",id:1},{label:"prefix",id:2},{label:"postfix",id:3},{label:a.WR,id:4}],type:c.M.Radio,name:"oper_1",answer:1},{id:2,question:t.createElement(t.Fragment,null,a.Fb," is automatic or implicit conversion of value from one type to another."),options:[{label:"Type Casting",id:1},{label:"Type Coercion",id:2},{label:"Type Conversion",id:3},{label:a.WR,id:4}],type:c.M.Checkbox,name:"oper_2",answer:[2]},{id:3,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"console.log('1' == 1);\nconsole.log('1' === 1);\nconsole.log('1' !== 1);\n")),options:[{label:t.createElement(t.Fragment,null,"false",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:1},{label:t.createElement(t.Fragment,null,"false",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:2},{label:t.createElement(t.Fragment,null,"true",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:3},{label:t.createElement(t.Fragment,null,"true",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:4}],type:c.M.Radio,name:"oper_3",answer:3},{id:4,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"console.log('JS' && 'Program');\nconsole.log('Program' && false);\nconsole.log('JS' || 'Program');\nconsole.log(false || 'Program');\n")),options:[{label:t.createElement(t.Fragment,null,"false",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:1},{label:t.createElement(t.Fragment,null,"'Program'",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),"'JS'",t.createElement(o.cJ,null),"'Program'",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:2},{label:t.createElement(t.Fragment,null,"true",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),"true",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:3},{label:t.createElement(t.Fragment,null,"'JS'",t.createElement(o.cJ,null),"'Program'",t.createElement(o.cJ,null),"'JS'",t.createElement(o.cJ,null),"false",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:4}],type:c.M.Radio,name:"oper_4",answer:2},{id:5,question:t.createElement(t.Fragment,null,"+ operator can also be used for string concatenation."),options:[{label:"true",id:1},{label:"false",id:2}],type:c.M.Radio,name:"oper_5",answer:1},{id:6,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"console.log('3' + 4 + 5);\nconsole.log(3 + 4 + '5');")),options:[{label:t.createElement(t.Fragment,null,"12",t.createElement(o.cJ,null),"12",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:1},{label:t.createElement(t.Fragment,null,"345",t.createElement(o.cJ,null),"345",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:2},{label:t.createElement(t.Fragment,null,"345",t.createElement(o.cJ,null),"75",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:3},{label:t.createElement(t.Fragment,null,"12",t.createElement(o.cJ,null),"345",t.createElement(o.cJ,null),t.createElement(o.cJ,null)),id:4}],type:c.M.Radio,name:"oper_6",answer:3},{id:7,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"delete Math.PI;")),options:[{label:"Error",id:1},{label:"true",id:2},{label:"false",id:3},{label:"undefined",id:4}],type:c.M.Radio,name:"oper_7",answer:3},{id:8,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"const arr = [1, 5, 10, 20, 40];\ndelete arr[2];\nconsole.log(arr);")),options:[{label:"[1, 5, 20, 40]",id:1},{label:"[1, 5, 10, 20, 40]",id:2},{label:"[1, 5, undefined, 20, 40]",id:3},{label:"[1, 5, empty, 20, 40]",id:4}],type:c.M.Radio,name:"oper_8",answer:3},{id:9,question:t.createElement(t.Fragment,null,a.Fb," operator returns string indicating the type of operand."),options:[{label:"type",id:1},{label:"typeof",id:2},{label:"void",id:3},{label:a.WR,id:4}],type:c.M.Radio,name:"oper_9",answer:2},{id:10,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"const arr = [1, 2, 3, 5,];\nconsole.log(arr);\n    ")),options:[{label:"Error",id:1},{label:"[1, 2, 3, 5, ]",id:2},{label:"[1, 2, 3, 5]",id:3},{label:"Warning",id:4}],type:c.M.Radio,name:"oper_10",answer:3},{id:11,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"const obj = { a: 10, 'invalid-key': 5 };\nconsole.log(obj.a + ', ' + obj['invalid-key']);\n    ")),options:[{label:"10, 5",id:1},{label:"10, NaN",id:2},{label:"10, undefined",id:3},{label:"10, Error",id:4}],type:c.M.Radio,name:"oper_11",answer:1},{id:12,question:t.createElement(t.Fragment,null,"What would be the output of given code:",t.createElement(r.Z,null,"console.log(50 + 10/8 + 2);")),options:[{label:"6",id:1},{label:"50",id:2},{label:"53.25",id:3},{label:a.WR,id:4}],type:c.M.Radio,name:"oper_12",answer:3}]},53232:(e,l,n)=>{n.d(l,{M:()=>t});var t={Radio:"radio",Checkbox:"checkbox"}}}]);