"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[2462],{92462:(e,t,l)=>{l.r(t),l.d(t,{default:()=>o});var n=l(67294),r=l(81391),a=l(87398),c=l(68947),m=l(12050),u=l(9167);n.Fragment,u.I,u.I,u.I,u.I,n.Fragment,n.Fragment,m.Z,u.I;const o=function(){return n.createElement(n.Fragment,null,n.createElement(a.Z,{as:"h2"},"Restrictions applied by strict mode"),n.createElement(c.Z,null,"Below are a few of the restrictions implemented by the strict mode."),n.createElement(c.Z,null,n.createElement(u.B,null,"On class and Modules"),n.createElement(c.Z,null,n.createElement(u.I,null,"Class")," and ",n.createElement(u.I,null,"JavaScript modules")," code automatically runs in strict mode.")),n.createElement(c.Z,null,n.createElement(u.B,null,"On global variables"),n.createElement(c.Z,null,"Strict mode makes it impossible to accidentally create ",n.createElement(u.B,null,"global"),n.createElement(m.Z,null)," variables.",n.createElement(r.Z,null,'"use strict";\nlet misTypedVar;\nmistypedvar = 10;\n')),n.createElement(c.Z,null,"In above example, assuming no ",n.createElement(u.I,null,"global")," variable",n.createElement(u.BI,null,'"mistypedvar"')," exists, this will throw a",n.createElement(u.BI,null,"ReferenceError"),", due to spelling mistake. On the contrary,",n.createElement(u.B,null,"non-strict mode")," would have declared a new ",n.createElement(m.Z,null),n.createElement(u.I,null,"global variable")," named ",n.createElement(u.BI,null,'"mistypedvar"'),".")),n.createElement(c.Z,null,n.createElement(u.B,null,"On assignment"),n.createElement(c.Z,null,"Strict mode makes ",n.createElement(u.I,null,"assignment")," to ",n.createElement(u.BI,null,"non-writable"),n.createElement(m.Z,null)," ",n.createElement(u.I,null,"global variables")," throw an ",n.createElement(m.Z,null),n.createElement(u.I,null,"exception"),".",n.createElement(r.Z,null,"let undefined = 10; // throws TypeError"))),n.createElement(c.Z,null,n.createElement(u.B,null,"On deleting undeletable"),n.createElement(c.Z,null,"In strict mode, attempting to ",n.createElement(u.I,null,"delete")," ",n.createElement(u.I,null,"undeletable"),n.createElement(m.Z,null)," properties throws errors.",n.createElement(r.Z,null,"delete Math.PI; // throws TypeError"))),n.createElement(c.Z,null,n.createElement(u.B,null,"On function parameters"),n.createElement(c.Z,null,"Strict mode requires that ",n.createElement(u.I,null,"function")," ",n.createElement(u.BI,null,"parameter names")," to be ",n.createElement(u.I,null,"unique"),".")),n.createElement(c.Z,null,n.createElement(u.B,null,"On setting properties on primitive values"),n.createElement(c.Z,null,"Strict mode in ",n.createElement(u.I,null,"ES6")," ",n.createElement(u.BI,null,"forbids setting properties")," on",n.createElement(m.Z,null)," ",n.createElement(u.I,null,"primitive")," values.",n.createElement(r.Z,null,'(10).text = "Ten";  // TypeError'))),n.createElement(c.Z,null,n.createElement(u.B,null,"On duplicate property names"),n.createElement(c.Z,null,"In ",n.createElement(u.I,null,"ES5")," strict mode code, ",n.createElement(u.BI,null,"duplicate property names")," were considered a",n.createElement(u.B,null,"SyntaxError"),". But with the introduction of",n.createElement(u.BI,null,'"computed property names"'),", making duplication possible at run time, therefore, ",n.createElement(u.I,null,"ES6")," removed this restriction.")),n.createElement(c.Z,null,n.createElement(u.B,null,'On "with" keyword'),n.createElement(c.Z,null,"Strict mode ",n.createElement(u.BI,null,"prohibits")," ",n.createElement(u.I,null,"with")," keyword.")),n.createElement(c.Z,null,n.createElement(u.B,null,"On eval()"),n.createElement(c.Z,null,n.createElement(u.BI,null,"eval()")," of strict mode code",n.createElement(u.BI,null,"does not introduce new variables")," into the surrounding scope.")),n.createElement(c.Z,null,n.createElement(u.B,null,'On "arguments" object'),n.createElement(c.Z,null,"Strict mode code doesn't alias properties of ",n.createElement(u.BI,null,"arguments"),n.createElement(m.Z,null)," object."),n.createElement(c.Z,null,"In ",n.createElement(u.BI,null,"non-strict mode")," code, a ",n.createElement(u.I,null,"function")," whose argument is let say ",n.createElement(u.B,null,'"arg"'),", then setting ",n.createElement(u.B,null,'"arg"')," also sets",n.createElement(u.BI,null,"arguments[0]")," and vice-versa. In below code, the value of",n.createElement(u.BI,null,"arguments[0]")," is also changed on changing ",n.createElement(u.BI,null,'"arg"'),".`"),n.createElement(r.Z,null,"function normalFunc(arg) {\n  arg = 10;\n  return [arg, arguments[0]];\n}\n\nconst res = normalFunc(15);\nconsole.log(res[0]);  // 10\nconsole.log(res[1]);  // 10\n// The value of arguments[0] was also changed."),n.createElement(c.Z,null,"But on the strict mode, setting ",n.createElement(u.BI,null,'"arg"')," does not change",n.createElement(u.BI,null,"arguments[0]"),"."),n.createElement(r.Z,null,'function strictFunc(arg) {\n  "use strict";\n  arg = 10;\n  return [arg, arguments[0]];\n}\n\nconst res = normalFunc(15);\nconsole.log(res[0]);  // 10\nconsole.log(res[1]);  // 15\n// The value of arguments[0] was not changed.')),n.createElement(c.Z,null,n.createElement(u.B,null,"On arguments.callee"),n.createElement(c.Z,null,"In strict mode, ",n.createElement(u.BI,null,"arguments.callee is no longer supported"),". In",n.createElement(m.Z,null)," ",n.createElement(u.I,null,"non-strict mode")," code, ",n.createElement(u.I,null,"argument.callee")," refers to the enclosing function.")))}}}]);