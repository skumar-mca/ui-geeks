"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[8755],{78755:(e,n,t)=>{t.r(n),t.d(n,{default:()=>o});var l=t(67294),r=t(81391),a=t(87398),c=t(68947),u=t(12050),m=t(9167),i=[{label:l.createElement(l.Fragment,null,l.createElement(m.B,null,"increment()")," function")},{label:l.createElement(l.Fragment,null,l.createElement(m.B,null,"decrement()")," function")},{label:l.createElement(l.Fragment,null,l.createElement(m.B,null,"value()")," function")}],s=[{label:l.createElement(l.Fragment,null,l.createElement(m.B,null,"privateCtr")," variable")},{label:l.createElement(l.Fragment,null,l.createElement(m.B,null,"changeBy()")," function")}];const o=function(){return l.createElement(l.Fragment,null,l.createElement(c.Z,null,"One of the main use cases for closures is creating",l.createElement(m.BI,null,"private methods/properties")," in functions."),l.createElement(a.Z,{as:"h2"},"Creating private methods/properties using Closures"),l.createElement(c.Z,null,"JavaScript, prior to ",l.createElement(m.I,null,"classes"),", didn't have a native way of declaring private methods, but it was possible to emulate private methods using closures."),l.createElement(c.Z,null,"Let's try to understand with the help of an example:"),l.createElement(r.Z,null,"const makeCounter = function() {\n    // private members\n    let privateCtr = 0;\n    function changeBy(val) { privateCtr += val; }\n    // public members, returned from here\n    return {\n        increment() { changeBy(1); },\n        decrement() { changeBy(-1); },\n        value() { return privateCtr; }\n  }\n}\n\nconst counter = makeCounter();\ncounter.value();    // 0\ncounter.increment();\ncounter.value();    // 1\ncounter.decrement();\ncounter.value();    // 1"),l.createElement(m.cJ,null),l.createElement(c.Z,null,"The lexical environment contains two private members:",l.createElement(m.GS,{items:s})),l.createElement(c.Z,null,"The private members can't be accessed from outside the"," ",l.createElement(m.I,null,"makeCounter()")," ",l.createElement(u.Z,null),"function. Instead, public members should be used to access the private members."),l.createElement(c.Z,null,"Below are the public functions returned from ",l.createElement(m.I,null,"makeCounter()"),":",l.createElement(m.GS,{items:i})),l.createElement(c.Z,null,"Above public functions are closures that share the same lexical environment."))}}}]);