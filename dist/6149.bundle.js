"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[6149],{46149:(e,l,a)=>{a.r(l),a.d(l,{default:()=>b});var n=a(67294),t=a(81391),i=a(87398),c=a(68947),o=a(12050),r=a(9167);const b=function(){return n.createElement(n.Fragment,null,n.createElement(i.Z,{as:"h2"},"Variable Scope"),n.createElement(c.Z,null,"When a variable is declared ",n.createElement(r.I,null,"outside of function"),", it is called a",n.createElement(r.B,null,"global variable"),", because it is available to any other code in the current document. When a variable is declared ",n.createElement(r.I,null,"inside a function"),", it is called a",n.createElement(r.B,null,"local variable"),", because it is available only within that function. ",n.createElement(r.BI,null,"let"),n.createElement(o.Z,null),"and ",n.createElement(r.BI,null,"const")," declarations are ",n.createElement(r.B,null,"scoped to the block")," that they are declared within."),n.createElement(t.Z,null,"let globalVariable = 10;\nanotherGlobalVariable = 20;\n\nfunction demoVariableScope() {\n  let localVariable = 50;\n  for(let blockVariable = 1; blockVariable <  5 ; blockVariable++) {\n      console.log(blockVariable);\n   }   \n  console.log(blockVariable); // Not available here\n}\n\nconsole.log(globalVariable ); // Available here\nconsole.log(localVariable); // Not available here"))}}}]);