"use strict";(self.webpackChunkui_geeks_in=self.webpackChunkui_geeks_in||[]).push([[6629],{46629:(e,t,n)=>{n.r(t),n.d(t,{default:()=>u});var l=n(67294),r=n(81391),a=n(87398),c=n(68947),i=n(12050),o=n(9167);const u=function(){return l.createElement(l.Fragment,null,l.createElement(a.Z,{as:"h4"},"slice()"),l.createElement(c.Z,null,"Returns a sub-array of the array. ",l.createElement(o.I,null,"slice()")," method returns a",l.createElement(i.Z,null)," ",l.createElement(o.I,null,"shallow copy")," ",l.createElement(i.Z,null),"of the portion of an array into a new array, selected from",l.createElement(o.B,null,'"start"')," index to ",l.createElement(o.B,null,'"end"'),' index ("end" index not included). The array will not be modified.'),l.createElement(c.Z,null,l.createElement(o.I,null,"Syntax:"),l.createElement(o.cJ,null),"slice();",l.createElement(o.cJ,null),"slice(",l.createElement(o.B,null,"start"),");",l.createElement(o.cJ,null),"slice(",l.createElement(o.B,null,"start, end"),");"),l.createElement(c.Z,null,l.createElement(o.B,null,"start:")," Zero based index of the starting items for the extraction."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger"];\narr.slice(2)  // ["lion", "fox", "tiger"]\n// Extracting all elements from index 2 to end of the array.\n'),l.createElement(c.Z,null,"A negative index can be used, indicating an offset from the end of the array."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger", "elephant"];\narr.slice(-1);  // ["elephant"]\n// Extracting one element from the end of the array,\n// i.e., extracting the last item of the array.'),l.createElement(c.Z,null,"If ",l.createElement(o.B,null,"start")," is undefined, slice starts from index 0."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger", "elephant"];\narr.slice();  // ["cat", "dog", "lion", "fox", "tiger", "elephant"]'),l.createElement(c.Z,null,"If ",l.createElement(o.B,null,"start")," is greater than the index range of the array, an empty array is returned."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger", "elephant"];\narr.slice(10);  // [ ]'),l.createElement(o.cJ,null),l.createElement(c.Z,null,l.createElement(o.B,null,"end:")," Index of the first element to exclude from the returned array. ",l.createElement(o.I,null,"slice()")," extracts up to but not including the ",l.createElement(o.B,null,'"end"'),l.createElement(i.Z,null)," index."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger"];\narr.slice(1, 4) // ["dog", "lion", "fox"]\n// Extracts elements from index 1 up to index 3 (end index - 1).'),l.createElement(c.Z,null,"A negative index can be used, indicating an offset from the end of the array."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger"];\narr.slice(1, -2)  // ["dog", "lion"]\n// Extracting from start index 1 to excluding the last 2 elements from the end.'),l.createElement(c.Z,null,"If ",l.createElement(o.B,null,"end")," is omitted, ",l.createElement(o.I,null,"slice()")," extracts through end of the array, i.e., ",l.createElement(o.I,null,"arr.length"),"."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger"];\narr.slice(2)  // ["lion", "fox", "tiger"]\n// Extracting from start index 2 to end of the array.'),l.createElement(c.Z,null,"If the ",l.createElement(o.B,null,"end")," is greater than the length of the array,",l.createElement(o.I,null,"slice()")," extracts through the end of the array i.e., end becomes the length of the array."),l.createElement(r.Z,null,'let arr = ["cat", "dog", "lion", "fox", "tiger"];\narr.slice(2, 10)  // ["lion", "fox", "tiger"]\n'))}}}]);